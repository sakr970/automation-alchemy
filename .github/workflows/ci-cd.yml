name: CI - build, scan, push, Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

  env:
    BACKEND_IMAGE: ${{ secrets.REGISTRY }}/${{ github.repository_owner }}/diagnostic_backend:latest
    FRONTEND_IMAGE: ${{ secrets.REGISTRY }}/${{ github.repository_owner }}/diagnostic_frontend:latest

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache node modules for backend
        uses: actions/cache@v4
        with:
          path: docker/backend/node_modules
          key: backend-${{ hashFiles('backend/package-lock.json') }}

      - name: Build backend image
        uses: docker/build-push-action@v4
        with:
          context: ./docker/backend
          push: false
          tags: ${{ env.BACKEND_IMAGE }}

      - name: Cache node modules for frontend
        uses: actions/cache@v4
        with:
          path: docker/frontend/node_modules
          key: frontend-${{ hashFiles('frontend/package-lock.json') }}

      - name: Build frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./docker/frontend
          push: false
          tags: ${{ env.FRONTEND_IMAGE }}

      - name: Run tests (npm ci, npm test)
        run: |
          if [ -f ./docker/backend/package.json ]; then
            (cd docker/backend && npm ci && npm test || true)
          fi
          if [ -f ./docker/frontend/package.json ]; then
            (cd docker/frontend && npm ci && npm test || true)
          fi

      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@v0.9.3
        with:
          image-ref: ${{ env.BACKEND_IMAGE }}
          format: 'table'
          exit-code: '1'
        continue-on-error: true

      - name: Scan frontend image with Trivy
        uses: aquasecurity/trivy-action@v0.9.3
        with:
          image-ref: ${{ env.FRONTEND_IMAGE }}
          format: 'table'
          exit-code: '1'
        continue-on-error: true
        
      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Push backend image to registry
        uses: docker/build-push-action@v4
        with:
          context: ./docker/backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}

      - name: Push frontend image to registry
        uses: docker/build-push-action@v4
        with:
          context: ./docker/frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}

      - name: SSH deploy to CI VM
        if: ${{ secrets.DEPLOY_HOST && secrets.DEPLOY_SSH_KEY }}
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            # Save incoming deploy key for CI VM to use when SSHing to app/web:
            mkdir -p /root/.ssh
            cat <<'KEY' > /root/.ssh/id_deploy
            ${{ secrets.TARGET_SSH_KEY }}
            KEY
            chmod 600 /root/.ssh/id_deploy

            export DEPLOY_HOSTS="192.168.56.121,192.168.56.122,192.168.56.123"
            export SSH_KEY="/root/.ssh/id_deploy"
            /usr/local/bin/ci_pull_and_restart.sh